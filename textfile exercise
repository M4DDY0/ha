#include <iostream>
#include <fstream>
//exercise1 quizscore
using namespace std;

int main()
{
    ifstream infile;
    infile.open("quiz1score.txt");
    
    int id, count;
    string name, grade;
    double score, total;
    
    while(infile >> id >> name >> score)
    {
        if (score < 5)
            grade = "Fail";
        else
            grade = "Pass";
        cout << id << " " << name << " " << score << endl;
        total += score;
        count ++;
    }
    
    cout << "Average score is " << total/count << endl;
    infile.close();
    return 0;
}



#include <iostream>
#include <fstream>
//exercise2 books (get input from user)
using namespace std;

struct Book {
    int id;
    string title, author, publisher;
    float price;
    int pages;
};

const int MAX_BOOKS = 3;

int main() {
    Book books[MAX_BOOKS];
    for (int i = 0; i < MAX_BOOKS; ++i) {
        cout << "Enter details for Book #" << i + 1 << endl;
        cout << "ID: ";
        cin >> books[i].id;

        cin.ignore(); // Clear the input before read strings

        cout << "Title: ";
        getline(cin, books[i].title);

        cout << "Author: ";
        getline(cin, books[i].author);

        cout << "Publisher: ";
        getline(cin, books[i].publisher);

        cout << "Price: ";
        cin >> books[i].price;

        cout << "Number of Pages: ";
        cin >> books[i].pages;

        cout << endl;
    }

    // Save the data to a text file
    ofstream outFile("bookdata.txt");
    if (!outFile) {
        cout << "Error opening the file." << endl;
        return 1;
    }

    for (int i = 0; i < MAX_BOOKS; ++i) {
        outFile << "ID: " << books[i].id << endl;
        outFile << "Title: " << books[i].title << endl;
        outFile << "Author: " << books[i].author << endl;
        outFile << "Publisher: " << books[i].publisher << endl;
        outFile << "Price: " << books[i].price << endl;
        outFile << "Number of Pages: " << books[i].pages << endl;
        outFile << endl;
    }

    outFile.close();
    cout << "Data saved to bookdata.txt successfully." << endl;

    return 0;
}

//Lab 11 Activity 1

#include <iostream>
#include <iomanip>
#include <fstream>
using namespace std;

int main(){
    
    double amt, total;
    int assist, payment;
    int count = 0;
    char ans;
    
    ifstream infile;
    infile.open("gasstation.txt");
    ofstream outfile;
    outfile.open("output.txt");
    
    outfile << "** PATRICK GAS STATION **" << endl;
    while (!infile.eof()) 
    {
        total = 0;
        outfile << "Customer " << ++count << ": " << endl;
        infile >> amt >> assist >> payment;
        
        if (assist == 0)
            total = amt;
        else 
        {
            if (amt < 50)
                total = amt + 0.50;
            
            else
                total = amt;
            
        }
        
        if (payment == 1)
            total = total + 0.05 * total;
        outfile << "=======================================" << endl;
        outfile << "TOTAL charge ==> RM " << fixed << setprecision(2) << total << endl;
        outfile << "=======================================" << endl;
        outfile << endl;
    }
    
    infile.close();
    outfile.close();
    return 0;
}


#include <iostream>
#include <fstream>
#include <iomanip>
using namespace std;

// L11_Activity 2 not finished yet
int main()
{
    int destination, adults, children;
    double cost, charge, total, sum, avg, max, min;
    int count = 0;
    
    ifstream infile;
    infile.open("travelingdata.txt");
    ofstream outfile;
    outfile.open("output.txt");
    
    outfile << "** HOLIDAY WEEKEND WOOHOO **" << endl;
    while (!infile.eof())
    {
        total = 0;
        outfile << "Group " << ++count << ": " << endl;
        infile >> destination >> adults >> children;
        
        if (destination == 1)
            charge = 500;
        if (destination == 2)
            charge = 700;
        else
            charge == 450;
            
        double total = (adults * charge) + (children * (0.75 * charge));
            
        if (adults + children > 10)
            total *= 0.9; // Apply 10% discount if more than 10 persons
            
        outfile << "=======================================" << endl;
        outfile << "TOTAL charge ==> RM " << fixed << setprecision(2) << total << endl;
        outfile << "=======================================" << endl;
        outfile << endl;
        
        sum += total;
        if (count == 1)
            max = total;
            min = total;
        else
        {
            if (total > max)
                max = total;
            if (total < min)
                min = total;
        }
    }
    avg = sum / count;
    
    infile.close();
    outfile.close();
    
    return 0;
}
